"use strict";(()=>{var e={};e.id=9588,e.ids=[9588],e.modules={38013:e=>{e.exports=require("mongodb")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3498:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>v,originalPathname:()=>w,patchFetch:()=>O,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>f,staticGenerationBailout:()=>j});var s={};t.r(s),t.d(s,{DELETE:()=>l,PATCH:()=>c});var o=t(95419),n=t(69108),i=t(99678),a=t(78070),u=t(22345),d=t(38013);async function l(e,{params:r}){try{let{db:e}=await (0,u.v)(),{userId:t}=r;if(!t||!d.ObjectId.isValid(t))return a.Z.json({error:"Invalid user ID"},{status:400});if(!await e.collection("users").findOne({_id:new d.ObjectId(t)}))return a.Z.json({error:"User not found"},{status:404});let s=await e.collection("users").deleteOne({_id:new d.ObjectId(t)});if(0===s.deletedCount)return a.Z.json({error:"Failed to delete user"},{status:500});return a.Z.json({success:!0})}catch(e){return console.error("Error deleting user:",e),a.Z.json({error:"Failed to delete user"},{status:500})}}async function c(e,{params:{userId:r}}){try{let{db:t}=await (0,u.v)(),s=await e.json();if(("Administrator"===s.role||"admin"===s.role)&&(s.role="Administrator",s.permissions={dashboard:!0,leads:!0,calendar:!0,email:!0,settings:!0,inventory:!0,favorites:!0,mls:!0}),s.permissions){let e=await t.collection("users").findOne({_id:new d.ObjectId(r)});if(!e)return a.Z.json({error:"User not found"},{status:404});s.permissions={...e.permissions,...s.permissions,mls:s.permissions.mls??e.permissions?.mls??!1},("Administrator"===s.role||"Administrator"===e.role)&&Object.keys(s.permissions).forEach(e=>{s.permissions[e]=!0})}let o=await t.collection("users").updateOne({_id:new d.ObjectId(r)},{$set:s});if(0===o.matchedCount)return a.Z.json({error:"User not found"},{status:404});return a.Z.json({message:"User updated successfully"})}catch(e){return console.error("Error updating user:",e),a.Z.json({error:"Failed to update user"},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/users/[userId]/route",pathname:"/api/users/[userId]",filename:"route",bundlePath:"app/api/users/[userId]/route"},resolvedPagePath:"/Users/chakrinaidu/Desktop/Gethomerealty-production/app/api/users/[userId]/route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:h,headerHooks:v,staticGenerationBailout:j}=p,w="/api/users/[userId]/route";function O(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:f})}},22345:(e,r,t)=>{let s;t.d(r,{v:()=>i});var o=t(38013);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");let n=process.env.MONGODB_URI;async function i(){try{let e=await s;return{db:e.db(),client:e}}catch(e){throw console.error("MongoDB connection error:",e),e}}s=new o.MongoClient(n,{connectTimeoutMS:1e4,socketTimeoutMS:45e3,serverSelectionTimeoutMS:5e3,maxPoolSize:10,retryWrites:!0,retryReads:!0}).connect()}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[1638,6206],()=>t(3498));module.exports=s})();