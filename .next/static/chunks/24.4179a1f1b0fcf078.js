"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[24],{20024:function(e,t,n){async function r(e,t){try{let n=await fetch("/api/reminder",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({event:e,phoneNumber:t})});return(await n.json()).success}catch(e){return console.error("Error sending SMS:",e),!1}}n.d(t,{reminderManager:function(){return s}});class i{static getInstance(){return i.instance||(i.instance=new i),i.instance}loadReminders(){let e=localStorage.getItem("scheduled_reminders");e&&(this.reminders=JSON.parse(e).map(e=>({...e,reminderTime:new Date(e.reminderTime).toISOString(),event:{...e.event,date:new Date(e.event.date)}})))}saveReminders(){localStorage.setItem("scheduled_reminders",JSON.stringify(this.reminders))}startChecking(){this.checkInterval=setInterval(()=>{this.checkReminders()},6e4)}async checkReminders(){let e=new Date;for(let t of this.reminders.filter(t=>!t.sent&&new Date(t.reminderTime)<=e))await r(t.event,t.phoneNumber)&&(t.sent=!0,this.saveReminders());this.reminders=this.reminders.filter(t=>{let n=new Date("".concat(t.event.date.toDateString()," ").concat(t.event.time));return e.getTime()-n.getTime()<864e5}),this.saveReminders()}scheduleReminder(e,t){let n=new Date(new Date("".concat(e.date.toDateString()," ").concat(e.time)).getTime()-9e5);return n>new Date&&(this.reminders.push({eventId:e.id,phoneNumber:t,reminderTime:n.toISOString(),event:e,sent:!1}),this.saveReminders(),!0)}cleanup(){this.checkInterval&&clearInterval(this.checkInterval)}constructor(){this.reminders=[],this.checkInterval=null,this.loadReminders(),this.startChecking()}}let s=i.getInstance()}}]);