"use strict";(()=>{var e={};e.id=169,e.ids=[169],e.modules={38013:e=>{e.exports=require("mongodb")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},33307:(e,t,n)=>{n.r(t),n.d(t,{headerHooks:()=>v,originalPathname:()=>w,patchFetch:()=>M,requestAsyncStorage:()=>S,routeModule:()=>y,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>j});var r={};n.r(r),n.d(r,{DELETE:()=>f,GET:()=>d,PATCH:()=>m,POST:()=>p});var o=n(95419),s=n(69108),i=n(99678),a=n(78070),c=n(22345),u=n(38013);async function l(e,t){try{return(await fetch(process.env.MLS_API_URL+"?$top=1",{headers:{Authorization:`Bearer ${e}`,Accept:"application/json"}})).ok}catch(e){return console.error("Error validating MLS token:",e),!1}}async function d(e){try{let{db:t}=await (0,c.v)(),n=e.headers.get("x-user-id");if(!n)return a.Z.json({error:"User ID is required"},{status:401});let r=await t.collection("users").findOne({_id:new u.ObjectId(n)});if(!r)return a.Z.json({error:"User not found"},{status:404});if(r.mlsConnected&&r.mlsToken&&!await l(r.mlsToken,r.mlsProvider))return await t.collection("users").updateOne({_id:new u.ObjectId(n)},{$set:{mlsConnected:!1,mlsToken:null,mlsProvider:null,mlsConnectedAt:null,mlsAutoSync:!1,mlsNotifications:!1}}),a.Z.json({mlsConnected:!1,autoSync:!1,notifications:!1,lastSync:null,error:"MLS token is invalid"});return a.Z.json({mlsConnected:r.mlsConnected||!1,autoSync:r.mlsAutoSync||!1,notifications:r.mlsNotifications||!1,lastSync:r.mlsLastSync||null,provider:r.mlsProvider||null})}catch(e){return console.error("Error fetching MLS settings:",e),a.Z.json({error:"Failed to fetch MLS settings"},{status:500})}}async function m(e){try{let{db:t}=await (0,c.v)(),n=e.headers.get("x-user-id"),r=await e.json();if(!n)return a.Z.json({error:"User ID is required"},{status:401});let o={};if("boolean"==typeof r.autoSync&&(o.mlsAutoSync=r.autoSync,r.autoSync&&(o.mlsLastSync=new Date)),"boolean"==typeof r.notifications&&(o.mlsNotifications=r.notifications),0===Object.keys(o).length)return a.Z.json({error:"No valid updates provided"},{status:400});let s=await t.collection("users").updateOne({_id:new u.ObjectId(n)},{$set:o});if(0===s.matchedCount)return a.Z.json({error:"User not found"},{status:404});return a.Z.json({message:"MLS settings updated successfully"})}catch(e){return console.error("Error updating MLS settings:",e),a.Z.json({error:"Failed to update MLS settings"},{status:500})}}async function p(e){try{let{db:t}=await (0,c.v)(),n=e.headers.get("x-user-id"),{mlsToken:r,mlsProvider:o}=await e.json();if(!n)return a.Z.json({error:"User ID is required"},{status:401});if(!r||!o)return a.Z.json({error:"MLS token and provider are required"},{status:400});if(!await l(r,o))return a.Z.json({error:"Invalid MLS token"},{status:400});let s=await t.collection("users").updateOne({_id:new u.ObjectId(n)},{$set:{mlsConnected:!0,mlsToken:r,mlsProvider:o,mlsConnectedAt:new Date,mlsLastSync:new Date}});if(0===s.matchedCount)return a.Z.json({error:"User not found"},{status:404});return a.Z.json({message:"MLS connection established successfully"})}catch(e){return console.error("Error connecting MLS:",e),a.Z.json({error:"Failed to connect MLS"},{status:500})}}async function f(e){try{let{db:t}=await (0,c.v)(),n=e.headers.get("x-user-id");if(!n)return a.Z.json({error:"User ID is required"},{status:401});let r=await t.collection("users").updateOne({_id:new u.ObjectId(n)},{$set:{mlsConnected:!1,mlsToken:null,mlsProvider:null,mlsConnectedAt:null,mlsAutoSync:!1,mlsNotifications:!1,mlsLastSync:null}});if(0===r.matchedCount)return a.Z.json({error:"User not found"},{status:404});return a.Z.json({message:"MLS connection removed successfully"})}catch(e){return console.error("Error removing MLS connection:",e),a.Z.json({error:"Failed to remove MLS connection"},{status:500})}}let y=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/mls/settings/route",pathname:"/api/mls/settings",filename:"route",bundlePath:"app/api/mls/settings/route"},resolvedPagePath:"/Users/chakrinaidu/Desktop/Gethomerealty-production/app/api/mls/settings/route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:S,staticGenerationAsyncStorage:g,serverHooks:h,headerHooks:v,staticGenerationBailout:j}=y,w="/api/mls/settings/route";function M(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}},22345:(e,t,n)=>{let r;n.d(t,{v:()=>i});var o=n(38013);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");let s=process.env.MONGODB_URI;async function i(){try{let e=await r;return{db:e.db(),client:e}}catch(e){throw console.error("MongoDB connection error:",e),e}}r=new o.MongoClient(s,{connectTimeoutMS:1e4,socketTimeoutMS:45e3,serverSelectionTimeoutMS:5e3,maxPoolSize:10,retryWrites:!0,retryReads:!0}).connect()}};var t=require("../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),r=t.X(0,[1638,6206],()=>n(33307));module.exports=r})();