"use strict";(()=>{var e={};e.id=6710,e.ids=[6710],e.modules={38013:e=>{e.exports=require("mongodb")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},22250:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>m,originalPathname:()=>g,patchFetch:()=>y,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>v,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>f});var o={};r.r(o),r.d(o,{GET:()=>c});var a=r(95419),n=r(69108),s=r(99678),l=r(78070),d=r(22345),i=r(38013);async function c(e,{params:t}){try{let{db:e}=await (0,d.v)(),r=await e.collection("leads").findOne({_id:new i.ObjectId(t.leadId)});if(!r)return l.Z.json({error:"Lead not found"},{status:404});return l.Z.json(r.calls||[])}catch(e){return console.error("Fetch calls error:",e),l.Z.json({error:"Failed to fetch calls"},{status:500})}}let u=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/leads/[leadId]/calls/route",pathname:"/api/leads/[leadId]/calls",filename:"route",bundlePath:"app/api/leads/[leadId]/calls/route"},resolvedPagePath:"/Users/chakrinaidu/Desktop/gethomerealty-verson-2/app/api/leads/[leadId]/calls/route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:p,staticGenerationAsyncStorage:h,serverHooks:v,headerHooks:m,staticGenerationBailout:f}=u,g="/api/leads/[leadId]/calls/route";function y(){return(0,s.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:h})}},22345:(e,t,r)=>{let o;r.d(t,{v:()=>s});var a=r(38013);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");let n=process.env.MONGODB_URI;async function s(){try{let e=await o;return{db:e.db(),client:e}}catch(e){throw console.error("MongoDB connection error:",e),e}}o=new a.MongoClient(n,{connectTimeoutMS:1e4,socketTimeoutMS:45e3,serverSelectionTimeoutMS:5e3,maxPoolSize:10,retryWrites:!0,retryReads:!0}).connect()}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[1638,6206],()=>r(22250));module.exports=o})();